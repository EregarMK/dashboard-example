{"version":3,"sources":["components/Charts/Chart.jsx","components/Map/MapBox.jsx","components/Misc.jsx","components/Panels/ExportBoard/ExportBoard.jsx","components/Panels/Panel/Panel.jsx","components/Select/Select.jsx","containers/App.js","reportWebVitals.js","index.js"],"names":["ChartType","children","layout","composed","size","data","barCategoryGap","margin","left","top","right","diff","value","change","last","color","Chart","height","isDesktop","window","innerWidth","width","type","hide","cursor","fill","stroke","dataKey","stackId","position","map","entry","index","MapBox","MapContainer","center","zoom","TileLayer","attribution","url","IconBox","icon","callback","className","onClick","handleClick","ExportBoard","print","Panel","name","difference","Select","boxType","options","useState","isOpened","toggleIsOpened","selectedId","changeSelectedId","hasOptions","Array","isArray","length","find","item","id","key","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qUAGMA,EAAY,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC7C,OAAKD,EAEE,cAAC,IAAD,2BAAcC,GAAd,IAAoBC,KAAMA,EAAMH,OAAQA,EAAQI,eAAgB,EAAGC,OAAQ,CAAEC,MAAO,GAAIC,IAAK,IAA7F,SAAoGR,KADhG,cAAC,IAAD,2BAAmBG,GAAnB,IAAyBC,KAAMA,EAAMH,OAAQA,EAAQI,eAAgB,EAAGC,OAAQ,CAAEG,MAAO,IAAzF,SAAgGT,MA+BzGI,EAAO,CACT,CACIM,KAAM,MACNC,MAAO,IACPC,OAAQ,EACRC,KAAM,IACNC,MAAO,WAEX,CACIJ,KAAM,OACNC,MAAO,IACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,WAEX,CACIJ,KAAM,MACNC,MAAO,IACPC,OAAQ,EACRC,KAAM,IACNC,MAAO,WAEX,CACIJ,KAAM,OACNC,MAAO,IACPC,QAAS,GACTC,KAAM,IACNC,MAAO,YAIAC,EA1DD,SAAC,GAAkC,IAAhCd,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,SAAUc,EAAa,EAAbA,OACzBC,EAAYC,OAAOC,WAAa,IAEtC,OACI,8BACI,cAAC,IAAD,UACI,eAAC,EAAD,CAAWhB,KAAM,CAAEiB,MAAOH,EAAY,IAAM,IAAKD,OAAQA,GAAUZ,KAAMA,EAAMH,OAAQA,EAAQI,eAAgB,EAAGH,SAAUA,EAA5H,UACI,cAAC,IAAD,CAAOmB,KAAMnB,EAAW,WAAa,SAAUoB,MAAOpB,IACtD,cAAC,IAAD,CAAOmB,KAAMnB,EAAW,SAAW,WAAYoB,MAAOpB,IACtD,cAAC,IAAD,CAASqB,OAAQ,CAAEC,KAAM,cAAeC,OAAQ,iBAChD,cAAC,IAAD,CAAKC,QAAQ,QAAQF,KAAK,UAAUG,QAAQ,UAA5C,SACI,cAAC,IAAD,CAAWD,QAAQ,OAAOE,SAAU1B,EAAW,MAAQ,YAE3D,cAAC,IAAD,CAAKwB,QAAQ,SAASF,KAAK,MAAMG,QAAQ,UAAzC,SAEQvB,EAAKyB,KAAI,SAACC,EAAOC,GAAR,OACL,cAAC,IAAD,CAA4BP,KAAMM,EAAMhB,OAAxC,eAAmBiB,SAI9B7B,GAAY,cAAC,IAAD,CAAMmB,KAAK,WAAWK,QAAQ,OAAOD,OAAO,oB,kBCd9DO,G,OAXA,WACX,OACI,cAACC,EAAA,EAAD,CAAcC,OAAQ,CAAC,QAAS,KAAOC,KAAM,EAA7C,SACI,cAACC,EAAA,EAAD,CACIC,YAAY,2LACZC,IAAI,6ECAPC,G,OAAU,SAAC,GAA8B,IAA5BlB,EAA2B,EAA3BA,KAAMmB,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAClC,OACI,cAAC,WAAD,UACI,qBAAKC,UAAS,mCAA8BF,EAA9B,gBAA0CnB,GAAQsB,QAAS,kBATjE,SAACF,GACZA,GAELA,IAMuFG,CAAYH,UCAxFI,EATK,WAChB,OACI,sBAAKH,UAAU,kBAAf,UACI,cAAC,EAAD,CAASrB,KAAK,YAAYmB,KAAK,WAAWC,SAAU,kBAAMvB,OAAO4B,WACjE,cAAC,EAAD,CAASzB,KAAK,YAAYmB,KAAK,QAAQC,SAAU,kBAAMvB,OAAO4B,eCM3DC,G,OAVD,SAAC,GAAiD,IAA/C/C,EAA8C,EAA9CA,SAAUW,EAAoC,EAApCA,MAAOqC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,WAAY5B,EAAW,EAAXA,KAChD,OACI,sBAAKqB,UAAU,QAAf,UACI,qBAAKA,UAAU,KAAf,SAAqB/B,IACrB,sBAAK+B,UAAU,cAAf,UAA8BM,EAA9B,IAAoC,sBAAMN,UAAS,gBAAWrB,GAA1B,SAAmC4B,OACtEjD,O,QCgBEkD,G,OApBA,SAAC,GAAgC,IAA9BV,EAA6B,EAA7BA,KAAMW,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAAc,EACRC,oBAAS,GADD,mBACpCC,EADoC,KAC1BC,EAD0B,OAEJF,mBAAS,IAFL,mBAEpCG,EAFoC,KAExBC,EAFwB,KAGrCC,EAAaN,GAAWO,MAAMC,QAAQR,IAAYA,EAAQS,OAEhE,OACI,sBAAKnB,UAAU,sBAAsBC,QAAS,kBAAMY,GAAgBD,IAApE,UACKI,GACG,eAAC,WAAD,WACI,iCAAOF,EAAWK,OAAST,EAAQU,MAAK,SAAAC,GAAI,OAAIA,EAAKC,KAAOR,KAAYR,KAAOI,EAAQ,GAAGJ,KAA1F,IAAgG,sBAAMN,UAAU,qBAChH,qBAAKA,UAAS,yBAAqBY,EAAsB,GAAX,UAA9C,SACKF,EAAQvB,KAAI,SAACkC,EAAME,GAAP,OAAe,qBAAKvB,UAAU,gBAA0BC,QAAS,kBAAMc,EAAiBM,EAAKC,KAA9E,SAAoFD,EAAKf,MAArDiB,WAI5E,cAAC,EAAD,CAASzB,KAAMA,EAAMnB,KAAM8B,SCuCjCC,G,OAAU,CAAC,CAAEJ,KAAM,gBAAiBgB,GAAI,WAAa,CAAEhB,KAAM,eAAgBgB,GAAI,YAExEE,EApDH,WACV,OACE,qBAAKxB,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,qBAAd,wCACA,sBAAKA,UAAU,mBAAf,UACE,cAAC,EAAD,CAAO/B,MAAM,aAAaqC,KAAK,eAAeC,WAAW,QAAQ5B,KAAK,YAAtE,SACE,cAAC,EAAD,CAAQ+B,QAASA,EAASZ,KAAK,WAAWW,QAAQ,cAEpD,cAAC,EAAD,CAAOxC,MAAM,MAAMqC,KAAK,eAAeC,WAAW,QAAQ5B,KAAK,YAA/D,SACE,cAAC,EAAD,CAAQ+B,QAASA,EAASZ,KAAK,SAASW,QAAQ,cAElD,cAAC,EAAD,CAAOxC,MAAM,OAAOqC,KAAK,aAAaC,WAAW,QAAQ5B,KAAK,YAA9D,SACE,cAAC,EAAD,CAAQ+B,QAASA,EAASZ,KAAK,WAAWW,QAAQ,cAEpD,cAAC,EAAD,CAAOxC,MAAM,KAAKqC,KAAK,kBAAkBC,WAAW,QAAQ5B,KAAK,YAAjE,SACE,cAAC,EAAD,CAAQ+B,QAASA,EAASZ,KAAK,WAAWW,QAAQ,gBAGtD,sBAAKT,UAAU,kBAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,4CACA,cAAC,EAAD,OAEF,cAAC,EAAD,CAAOxC,UAAQ,EAACc,OAAQ,SAE1B,sBAAK0B,UAAU,gBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,2CAEF,cAAC,EAAD,CAAOzC,OAAO,WAAWe,OAAQ,YAGrC,qBAAK0B,UAAU,mBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,0DACA,cAAC,EAAD,OAEF,cAAC,EAAD,kBCrCCyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9b03ac2a.chunk.js","sourcesContent":["import React from 'react';\nimport { BarChart, ComposedChart, ResponsiveContainer, XAxis, YAxis, Tooltip, Bar, LabelList, Line, Cell } from 'recharts';\n\nconst ChartType = ({ children, layout, composed, size }) => {\n    if (!composed)\n        return <ComposedChart {...size} data={data} layout={layout} barCategoryGap={4} margin={{ right: 40 }}>{children}</ComposedChart>\n    return <BarChart {...size} data={data} layout={layout} barCategoryGap={4} margin={{ left: -20, top: 20 }}>{children}</BarChart>\n}\n\nconst Chart = ({ layout, composed, height }) => {\n    const isDesktop = window.innerWidth > 576;\n\n    return (\n        <div>\n            <ResponsiveContainer>\n                <ChartType size={{ width: isDesktop ? 400 : 240, height: height }} data={data} layout={layout} barCategoryGap={4} composed={composed}>\n                    <XAxis type={composed ? 'category' : 'number'} hide={!composed} />\n                    <YAxis type={composed ? 'number' : 'category'} hide={!composed} />\n                    <Tooltip cursor={{ fill: 'transparent', stroke: 'transparent' }} />\n                    <Bar dataKey='value' fill='#e5e7e9' stackId='stacked' >\n                        <LabelList dataKey='diff' position={composed ? 'top' : 'right'} />\n                    </Bar>\n                    <Bar dataKey='change' fill='red' stackId='stacked'>\n                        {\n                            data.map((entry, index) => (\n                                <Cell key={`cell-${index}`} fill={entry.color} />\n                            ))\n                        }\n                    </Bar>\n                    {composed && <Line type='monotone' dataKey='last' stroke=\"#ff7300\" />}\n                </ChartType>\n            </ResponsiveContainer>\n        </div>\n    );\n};\n\nconst data = [\n    {\n        diff: '+4%',\n        value: 330,\n        change: 4,\n        last: 326,\n        color: '#2ABFD7'\n    },\n    {\n        diff: '+15%',\n        value: 300,\n        change: 15,\n        last: 285,\n        color: '#BDD74B'\n    },\n    {\n        diff: '+9%',\n        value: 200,\n        change: 9,\n        last: 191,\n        color: '#FF9933'\n    },\n    {\n        diff: '-17%',\n        value: 261,\n        change: -17,\n        last: 278,\n        color: '#FC5151'\n    },\n]\n\nexport default Chart;","import React from 'react';\nimport { MapContainer, TileLayer } from 'react-leaflet';\nimport './MapBox.scss';\n\nconst MapBox = () => {\n    return (\n        <MapContainer center={[51.505, -0.09]} zoom={3}>\n            <TileLayer\n                attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n                url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\"\n            />\n        </MapContainer>\n    );\n};\n\nexport default MapBox;","import React, { Fragment } from 'react';\nimport './Misc.scss';\n\nconst handleClick = (callback) => {\n    if (!callback)\n        return\n    callback()\n}\n\nexport const IconBox = ({ type, icon, callback }) => {\n    return (\n        <Fragment>\n            <div className={`button button-right icon-${icon} btn-${type}`} onClick={() => handleClick(callback)}></div>\n        </Fragment>\n    );\n};\n","import React from 'react';\nimport { IconBox } from '../../Misc';\n\nconst ExportBoard = () => {\n    return (\n        <div className='flex flex-right'>\n            <IconBox type='secondary' icon='download' callback={() => window.print()} />\n            <IconBox type='secondary' icon='print' callback={() => window.print()} />\n        </div>\n    );\n};\n\nexport default ExportBoard;","import React from 'react';\nimport './Panel.scss';\n\nconst Panel = ({ children, value, name, difference, type }) => {\n    return (\n        <div className='panel'>\n            <div className='h1'>{value}</div>\n            <div className='panel-title'>{name} <span className={`right ${type}`}>{difference}</span></div>\n            {children}\n        </div>\n    );\n};\n\nexport default Panel;","import React, { Fragment, useState } from 'react';\nimport { IconBox } from '../Misc';\nimport './Select.scss';\n\nconst Select = ({ icon, boxType, options }) => {\n    const [isOpened, toggleIsOpened] = useState(false);\n    const [selectedId, changeSelectedId] = useState('');\n    const hasOptions = options && Array.isArray(options) && options.length;\n\n    return (\n        <div className='select-wrapper flex' onClick={() => toggleIsOpened(!isOpened)}>\n            {hasOptions && (\n                <Fragment>\n                    <span>{selectedId.length ? options.find(item => item.id === selectedId).name : options[0].name} <span className='icon-down-dir'></span></span>\n                    <div className={`select-options ${!isOpened ? 'hidden' : ''}`}>\n                        {options.map((item, key) => <div className='select-option' key={key} onClick={() => changeSelectedId(item.id)}>{item.name}</div>)}\n                    </div>\n                </Fragment>\n            )}\n            <IconBox icon={icon} type={boxType} />\n        </div>\n    );\n};\n\nexport default Select;","import React from 'react';\nimport Chart from '../components/Charts/Chart';\nimport MapBox from '../components/Map/MapBox';\nimport ExportBoard from '../components/Panels/ExportBoard/ExportBoard';\nimport Panel from '../components/Panels/Panel/Panel';\nimport Select from '../components/Select/Select';\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <div className='wrapper'>\n      <div className='dashboard'>\n        <h2 className='dashboard-title h2'>Enterprise Shiny Dashboard</h2>\n        <div className='dashboard-panels'>\n          <Panel value='$2 674 862' name='total profit' difference='+4.5%' type='increased'>\n            <Select options={options} icon='database' boxType='primary' />\n          </Panel>\n          <Panel value='657' name='active users' difference='+8.5%' type='increased'>\n            <Select options={options} icon='user-o' boxType='success' />\n          </Panel>\n          <Panel value='$245' name='new orders' difference='+3.9%' type='increased'>\n            <Select options={options} icon='th-large' boxType='warning' />\n          </Panel>\n          <Panel value='12' name='open complaints' difference='-5.3%' type='decreased'>\n            <Select options={options} icon='ellipsis' boxType='danger' />\n          </Panel>\n        </div>\n        <div className='dashboard-boxes'>\n          <div className='dashboard-column'>\n            <div className='dashboard-box'>\n              <div className='dashboard-box-title flex'>\n                <h3>Production</h3>\n                <ExportBoard />\n              </div>\n              <Chart composed height={160} />\n            </div>\n            <div className='dashboard-box'>\n              <div className='dashboard-box-title'>\n                <h3>Summary</h3>\n              </div>\n              <Chart layout='vertical' height={100} />\n            </div>\n          </div>\n          <div className='dashboard-column'>\n            <div className='dashboard-box'>\n              <div className='dashboard-box-title flex'>\n                <h3>sales revenue by country</h3>\n                <ExportBoard />\n              </div>\n              <MapBox />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst options = [{ name: 'Monthly Stats', id: 'monthly' }, { name: 'Yearly Stats', id: 'yearly' }];\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}